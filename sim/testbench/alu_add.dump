$date
	Fri May 17 16:13:11 2019
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module alu_add_tb $end
$var wire 32 ! rd [31:0] $end
$var reg 1 " clk $end
$var reg 32 # rs1 [31:0] $end
$var reg 32 $ rs2 [31:0] $end
$scope module specimen $end
$var wire 32 % rs1 [31:0] $end
$var wire 32 & rs2 [31:0] $end
$var wire 32 ' rd [31:0] $end
$upscope $end
$upscope $end
$scope module alu_and $end
$var wire 32 ( rd [31:0] $end
$var wire 32 ) rs1 [31:0] $end
$var wire 32 * rs2 [31:0] $end
$upscope $end
$scope module alu_or $end
$var wire 32 + rd [31:0] $end
$var wire 32 , rs1 [31:0] $end
$var wire 32 - rs2 [31:0] $end
$upscope $end
$scope module alu_sll $end
$var wire 32 . rs1 [31:0] $end
$var wire 32 / rs2 [31:0] $end
$var wire 32 0 rd [31:0] $end
$var wire 5 1 amount [4:0] $end
$upscope $end
$scope module alu_slt $end
$var wire 32 2 rs1 [31:0] $end
$var wire 32 3 rs2 [31:0] $end
$var wire 32 4 rd [31:0] $end
$upscope $end
$scope module alu_sltu $end
$var wire 32 5 rs1 [31:0] $end
$var wire 32 6 rs2 [31:0] $end
$var wire 32 7 rd [31:0] $end
$upscope $end
$scope module alu_sra $end
$var wire 32 8 rs1 [31:0] $end
$var wire 32 9 rs2 [31:0] $end
$var wire 32 : rd [31:0] $end
$var wire 5 ; amount [4:0] $end
$upscope $end
$scope module alu_srl $end
$var wire 32 < rs1 [31:0] $end
$var wire 32 = rs2 [31:0] $end
$var wire 32 > rd [31:0] $end
$var wire 5 ? amount [4:0] $end
$upscope $end
$scope module alu_sub $end
$var wire 32 @ rs1 [31:0] $end
$var wire 32 A rs2 [31:0] $end
$var wire 32 B rd [31:0] $end
$upscope $end
$scope module alu_xor $end
$var wire 32 C rd [31:0] $end
$var wire 32 D rs1 [31:0] $end
$var wire 32 E rs2 [31:0] $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bz E
bz D
bx C
bx B
bz A
bz @
bz ?
bx >
bz =
bz <
bz ;
bx :
bz 9
bz 8
b0x 7
bz 6
bz 5
b0x 4
bz 3
bz 2
bz 1
bx 0
bz /
bz .
bz -
bz ,
bx +
bz *
bz )
bx (
b0 '
b0 &
b0 %
b0 $
b0 #
0"
b0 !
$end
#1000
1"
#2000
0"
#2100
b1 $
b1 &
b10 !
b10 '
b1 #
b1 %
#3000
1"
#4000
0"
#4100
b11111111111111111111111111111111 $
b11111111111111111111111111111111 &
b11111111111111111111111111111110 !
b11111111111111111111111111111110 '
b11111111111111111111111111111111 #
b11111111111111111111111111111111 %
#5000
1"
#6000
0"
#6100
b11111111111111111111111111110110 $
b11111111111111111111111111110110 &
b0 !
b0 '
b1010 #
b1010 %
#7000
1"
#8000
0"
#8100
b1010 $
b1010 &
b0 !
b0 '
b11111111111111111111111111110110 #
b11111111111111111111111111110110 %
#9000
1"
#10000
0"
#10100
b10101 $
b10101 &
b11111 !
b11111 '
b1010 #
b1010 %
#11000
1"
#12000
0"
#12100
b10 $
b10 &
b1 !
b1 '
b11111111111111111111111111111111 #
b11111111111111111111111111111111 %
#13000
1"
#14000
0"
#14100
