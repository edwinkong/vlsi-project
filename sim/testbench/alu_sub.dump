$date
	Fri May 17 16:13:11 2019
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module alu_add $end
$var wire 32 ! rs1 [31:0] $end
$var wire 32 " rs2 [31:0] $end
$var wire 32 # rd [31:0] $end
$upscope $end
$scope module alu_and $end
$var wire 32 $ rd [31:0] $end
$var wire 32 % rs1 [31:0] $end
$var wire 32 & rs2 [31:0] $end
$upscope $end
$scope module alu_or $end
$var wire 32 ' rd [31:0] $end
$var wire 32 ( rs1 [31:0] $end
$var wire 32 ) rs2 [31:0] $end
$upscope $end
$scope module alu_sll $end
$var wire 32 * rs1 [31:0] $end
$var wire 32 + rs2 [31:0] $end
$var wire 32 , rd [31:0] $end
$var wire 5 - amount [4:0] $end
$upscope $end
$scope module alu_slt $end
$var wire 32 . rs1 [31:0] $end
$var wire 32 / rs2 [31:0] $end
$var wire 32 0 rd [31:0] $end
$upscope $end
$scope module alu_sltu $end
$var wire 32 1 rs1 [31:0] $end
$var wire 32 2 rs2 [31:0] $end
$var wire 32 3 rd [31:0] $end
$upscope $end
$scope module alu_sra $end
$var wire 32 4 rs1 [31:0] $end
$var wire 32 5 rs2 [31:0] $end
$var wire 32 6 rd [31:0] $end
$var wire 5 7 amount [4:0] $end
$upscope $end
$scope module alu_srl $end
$var wire 32 8 rs1 [31:0] $end
$var wire 32 9 rs2 [31:0] $end
$var wire 32 : rd [31:0] $end
$var wire 5 ; amount [4:0] $end
$upscope $end
$scope module alu_sub_tb $end
$var wire 32 < rd [31:0] $end
$var reg 1 = clk $end
$var reg 32 > rs1 [31:0] $end
$var reg 32 ? rs2 [31:0] $end
$scope module specimen $end
$var wire 32 @ rs1 [31:0] $end
$var wire 32 A rs2 [31:0] $end
$var wire 32 B rd [31:0] $end
$upscope $end
$upscope $end
$scope module alu_xor $end
$var wire 32 C rd [31:0] $end
$var wire 32 D rs1 [31:0] $end
$var wire 32 E rs2 [31:0] $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bz E
bz D
bx C
b0 B
b0 A
b0 @
b0 ?
b0 >
0=
b0 <
bz ;
bx :
bz 9
bz 8
bz 7
bx 6
bz 5
bz 4
b0x 3
bz 2
bz 1
b0x 0
bz /
bz .
bz -
bx ,
bz +
bz *
bz )
bz (
bx '
bz &
bz %
bx $
bx #
bz "
bz !
$end
#1000
1=
#2000
0=
#2100
b1 ?
b1 A
b0 <
b0 B
b1 >
b1 @
#3000
1=
#4000
0=
#4100
b11111111111111111111111111111111 ?
b11111111111111111111111111111111 A
b0 <
b0 B
b11111111111111111111111111111111 >
b11111111111111111111111111111111 @
#5000
1=
#6000
0=
#6100
b11111111111111111111111111110110 ?
b11111111111111111111111111110110 A
b10100 <
b10100 B
b1010 >
b1010 @
#7000
1=
#8000
0=
#8100
b1010 ?
b1010 A
b11111111111111111111111111101100 <
b11111111111111111111111111101100 B
b11111111111111111111111111110110 >
b11111111111111111111111111110110 @
#9000
1=
#10000
0=
#10100
b1011 <
b1011 B
b10101 >
b10101 @
#11000
1=
#12000
0=
#12100
b11111111111111111111111111111111 ?
b11111111111111111111111111111111 A
b0 <
b0 B
b11111111111111111111111111111111 >
b11111111111111111111111111111111 @
#13000
1=
#14000
0=
#14100
