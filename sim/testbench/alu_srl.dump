$date
	Fri May 17 16:13:11 2019
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module alu_add $end
$var wire 32 ! rs1 [31:0] $end
$var wire 32 " rs2 [31:0] $end
$var wire 32 # rd [31:0] $end
$upscope $end
$scope module alu_and $end
$var wire 32 $ rd [31:0] $end
$var wire 32 % rs1 [31:0] $end
$var wire 32 & rs2 [31:0] $end
$upscope $end
$scope module alu_or $end
$var wire 32 ' rd [31:0] $end
$var wire 32 ( rs1 [31:0] $end
$var wire 32 ) rs2 [31:0] $end
$upscope $end
$scope module alu_sll $end
$var wire 32 * rs1 [31:0] $end
$var wire 32 + rs2 [31:0] $end
$var wire 32 , rd [31:0] $end
$var wire 5 - amount [4:0] $end
$upscope $end
$scope module alu_slt $end
$var wire 32 . rs1 [31:0] $end
$var wire 32 / rs2 [31:0] $end
$var wire 32 0 rd [31:0] $end
$upscope $end
$scope module alu_sltu $end
$var wire 32 1 rs1 [31:0] $end
$var wire 32 2 rs2 [31:0] $end
$var wire 32 3 rd [31:0] $end
$upscope $end
$scope module alu_sra $end
$var wire 32 4 rs1 [31:0] $end
$var wire 32 5 rs2 [31:0] $end
$var wire 32 6 rd [31:0] $end
$var wire 5 7 amount [4:0] $end
$upscope $end
$scope module alu_srl_tb $end
$var wire 32 8 rd [31:0] $end
$var reg 1 9 clk $end
$var reg 32 : rs1 [31:0] $end
$var reg 32 ; rs2 [31:0] $end
$scope module specimen $end
$var wire 32 < rs1 [31:0] $end
$var wire 32 = rs2 [31:0] $end
$var wire 32 > rd [31:0] $end
$var wire 5 ? amount [4:0] $end
$upscope $end
$upscope $end
$scope module alu_sub $end
$var wire 32 @ rs1 [31:0] $end
$var wire 32 A rs2 [31:0] $end
$var wire 32 B rd [31:0] $end
$upscope $end
$scope module alu_xor $end
$var wire 32 C rd [31:0] $end
$var wire 32 D rs1 [31:0] $end
$var wire 32 E rs2 [31:0] $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bz E
bz D
bx C
bx B
bz A
bz @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
09
b0 8
bz 7
bx 6
bz 5
bz 4
b0x 3
bz 2
bz 1
b0x 0
bz /
bz .
bz -
bx ,
bz +
bz *
bz )
bz (
bx '
bz &
bz %
bx $
bx #
bz "
bz !
$end
#1000
19
#2000
09
#2100
b1 ?
b1 ;
b1 =
b1 8
b1 >
b10 :
b10 <
#3000
19
#4000
09
#4100
b0 8
b0 >
b1 :
b1 <
#5000
19
#6000
09
#6100
b1111111111111111111111111111111 8
b1111111111111111111111111111111 >
b11111111111111111111111111111111 :
b11111111111111111111111111111111 <
#7000
19
#8000
09
#8100
